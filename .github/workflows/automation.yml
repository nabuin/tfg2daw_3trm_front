name: Docker Image CI/CD frontend Coworking

on:
  push:
    branches: [ main, develop, despliegue-cloud ]
  pull_request:
    branches: [ main, develop, despliegue-cloud ]
env:
  EKS_CLUSTER_NAME: cluster-coworking
  AWS_REGION: us-east-1

jobs:

  build:
  
    name: Deployment
    runs-on: ubuntu-latest

    steps:

    # Paso 1: Configurar Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Paso 2: Login a Docker Hub
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    # Paso 3: Crear metadata para la imagen Docker
    - name: Docker Metadata for Image
      id: docker_meta
      uses: docker/metadata-action@v5
      with:
        images: jblas7/front-3-trimestre-2-daw
        flavor: |
          latest=false
        tags: |
          type=raw,value=00

    # Paso 4: Construir y subir la imagen a Docker Hub
    - name: Build and Push to Docker Hub
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: jblas7/front-3-trimestre-2-daw:vfinal # para q no cambie el dns name del k8s al tener que cambiar el yaml, asi esto sera siempre lo mismo
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64
    
    # Paso 5: Realizar el checkout del código
    - name: Check out code
      uses: actions/checkout@v2   
        
    # IMPORTANTE, como en AWS academy las credenciales cambian cada vez que se lanza, la parte de AWS se dejará comentada hasta el momento que este todo preparado para lanzarlo
    # ahi se descomentará todo esto y se añadirán los secretos de las credenciales en el acto, haciendo que la autentificacion sea correcta y el propio github actions haga el despliege
    # continuo de forma totalmente automatizada, hasta entonces se dejará comentado para evitar errores

    # Paso 6: Configurar credenciales de AWS para EKS (COMENTADO POR EL MOMENTO)
    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
    #     aws-region: ${{env.AWS_REGION}}

    #  actualizar config kubectl para el acceso al EKS (COMENTADO POR EL MOMENTO)
    # - name: Update kube config
    #   run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

    # Desplegar a EKS (COMENTADO POR EL MOMENTO)
    # - name: Deploy to EKS
    #   run: |
    #     kubectl apply -f manifests/frontend-deployment.yaml
    #     kubectl apply -f manifests/frontend-service.yaml
    #     kubectl apply -f manifests/https.yaml